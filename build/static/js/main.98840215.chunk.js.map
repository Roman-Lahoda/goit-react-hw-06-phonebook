{"version":3,"sources":["App.module.css","component/ContactsList/ContactList.module.css","component/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","component/ContactsForm/ContactsForm.js","component/Filter/Filter.js","component/ContactsList/ContactsList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","component/ContactsForm/ContactsForm.module.css"],"names":["module","exports","actions","addContact","createAction","deleteContact","changeFilters","getContacts","state","contacts","items","getFilter","filter","ContactsFrom","useSelector","dispatch","useDispatch","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","onSubmit","preventDefault","newContact","id","shortid","generate","find","contact","alert","className","s","form","label","input","type","onChange","pattern","title","required","btn","Filter","target","ContactsList","normalizedFilter","toLowerCase","item","includes","getFilteredContacts","contactList","map","onClick","connect","phonebook","pageTitle","ContactsForm","length","itemsReducer","createReducer","payload","action","filtersReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","persistedReducer","persistReducer","contactsReducer","store","configureStore","reducer","devtools","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.98840215.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"App_phonebook__2_5m_\",\"pageTitle\":\"App_pageTitle__325us\",\"title\":\"App_title__18j9R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__zU668\",\"contact\":\"ContactList_contact__32yjy\",\"btn\":\"ContactList_btn__2YYFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__MwwLI\",\"input\":\"Filter_input__2XshO\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contacts/addContact\");\r\nconst deleteContact = createAction(\"contacts/deleteContact\");\r\nconst changeFilters = createAction(\"contacts/filterContact\");\r\n\r\nconst actions = {\r\n  addContact,\r\n  deleteContact,\r\n  changeFilters,\r\n};\r\nexport default actions;\r\n","export const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n","import { useState } from \"react\";\r\nimport s from \"./ContactsForm.module.css\";\r\nimport shortid from \"shortid\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport actions from \"../../redux/contacts/contacts-actions\";\r\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst ContactsFrom = () => {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newContact = { id: shortid.generate(), name, number };\r\n    const sameContact = contacts.find(\r\n      (contact) => contact.name === newContact.name\r\n    );\r\n    if (sameContact) {\r\n      alert(`${newContact.name} is already in contacts`);\r\n      return;\r\n    }\r\n    dispatch(actions.addContact(newContact));\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={s.btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactsFrom;\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport actions from \"../../redux/contacts/contacts-actions\";\r\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={(e) => dispatch(actions.changeFilters(e.target.value))}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import s from \"./ContactList.module.css\";\r\nimport actions from \"../../redux/contacts/contacts-actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getContacts,\r\n  getFilter,\r\n} from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst ContactsList = () => {\r\n  const getFilteredContacts = (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((item) =>\r\n      item.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  const filter = useSelector(getFilter);\r\n  const contacts = useSelector((state) =>\r\n    getFilteredContacts(state.contacts.items, filter)\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map((item) => {\r\n        return (\r\n          <li key={item.id} className={s.contact}>\r\n            <span>{item.name}:</span>\r\n            <span>{item.number}</span>\r\n            <button\r\n              className={s.btn}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                dispatch(actions.deleteContact(item.id));\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import s from \"./App.module.css\";\r\nimport ContactsForm from \"./component/ContactsForm\";\r\nimport Filter from \"./component/Filter\";\r\nimport ContactsList from \"./component/ContactsList\";\r\nimport { connect, useSelector } from \"react-redux\";\r\n\r\nfunction App() {\r\n  const contacts = useSelector((state) => state.contacts.items);\r\n  return (\r\n    <div className={s.phonebook}>\r\n      <h1 className={s.pageTitle}>Phonebook</h1>\r\n      <ContactsForm />\r\n      {contacts.length > 0 && <h2 className={s.title}>Contacts</h2>}\r\n      {contacts.length > 1 && <Filter />}\r\n      <ContactsList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect()(App);\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./contacts-actions\";\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [payload, ...state],\r\n  [actions.deleteContact]: (state, action) => [\r\n    ...state.filter((item) => item.id !== action.payload),\r\n  ],\r\n});\r\n\r\nconst filtersReducer = createReducer(\"\", {\r\n  [actions.changeFilters]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filtersReducer,\r\n});\r\n","import {\r\n  configureStore,\r\n  combineReducers,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst persistedReducer = persistReducer(contactsPersistConfig, contactsReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistedReducer,\r\n  },\r\n  devtools: true,\r\n  middleware,\r\n  // devtools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__VHe4B\",\"label\":\"ContactsForm_label___2Jb3\",\"input\":\"ContactsForm_input__3K4TL\",\"btn\":\"ContactsForm_btn__3Gr0H\"};"],"sourceRoot":""}