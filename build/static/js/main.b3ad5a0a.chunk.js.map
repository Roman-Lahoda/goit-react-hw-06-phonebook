{"version":3,"sources":["component/Filter/Filter.module.css","component/ContactsForm/ContactsForm.module.css","component/ContactsForm/ContactsForm.js","component/Filter/Filter.js","component/ContactsList/ContactList.js","App.js","index.js","App.module.css","component/ContactsList/ContactList.module.css"],"names":["module","exports","ContactsFrom","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","preventDefault","className","s","form","label","input","type","onChange","pattern","title","required","btn","Filter","ContactsList","list","onDelete","contactList","map","item","contact","onClick","id","App","contacts","setContacts","filter","setFilter","useEffect","JSON","parse","window","localStorage","getItem","setItem","stringify","normalizedFilter","toLowerCase","filteredContacts","includes","phonebook","pageTitle","data","newContact","shortid","generate","find","alert","prevContacts","length","contactId","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3ad5a0a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1v07Z\",\"input\":\"Filter_input__AlrOH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__3rG6W\",\"label\":\"ContactsForm_label__2Me1B\",\"input\":\"ContactsForm_input__iGQUV\",\"btn\":\"ContactsForm_btn__26HGc\"};","import { useState } from \"react\";\r\nimport s from \"./ContactsForm.module.css\";\r\n\r\nexport default function ContactsFrom({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const contactInfo = { name, number };\r\n    onSubmit(contactInfo);\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={s.btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactsList = ({ list, onDelete }) => {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {list.map((item) => {\r\n        return (\r\n          <li key={item.id} className={s.contact}>\r\n            <span>{item.name}:</span>\r\n            <span>{item.number}</span>\r\n            <button\r\n              className={s.btn}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                onDelete(item.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  list: PropTypes.arrayOf(\r\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired\r\n  ).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import { useState, useEffect } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport s from \"./App.module.css\";\r\nimport ContactsForm from \"./component/ContactsForm\";\r\nimport Filter from \"./component/Filter\";\r\nimport ContactsList from \"./component/ContactsList\";\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setContacts(JSON.parse(window.localStorage.getItem(\"contacts\")) || []);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const onAddContact = (data) => {\r\n    const newContact = {\r\n      id: shortid.generate(),\r\n      ...data,\r\n    };\r\n\r\n    const sameContact = contacts.find(\r\n      (contact) => contact.name === newContact.name\r\n    );\r\n\r\n    if (sameContact) {\r\n      alert(`${newContact.name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    setContacts((prevContacts) => [newContact, ...prevContacts]);\r\n  };\r\n\r\n  const onChangeFilter = (e) => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const onDeleteContact = (contactId) => {\r\n    setContacts((prevState) =>\r\n      prevState.filter((contact) => contact.id !== contactId)\r\n    );\r\n  };\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n  const filteredContacts = contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n\r\n  return (\r\n    <div className={s.phonebook}>\r\n      <h1 className={s.pageTitle}>Phonebook</h1>\r\n      <ContactsForm onSubmit={onAddContact} />\r\n      {contacts.length > 0 && <h2 className={s.title}>Contacts</h2>}\r\n      {contacts.length > 1 && (\r\n        <Filter value={filter} onChange={onChangeFilter} />\r\n      )}\r\n      <ContactsList list={filteredContacts} onDelete={onDeleteContact} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"App_phonebook__QrEvu\",\"pageTitle\":\"App_pageTitle__QcnRe\",\"title\":\"App_title__2KvYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__-xH8p\",\"contact\":\"ContactList_contact__3gmOa\",\"btn\":\"ContactList_btn__34dwM\"};"],"sourceRoot":""}